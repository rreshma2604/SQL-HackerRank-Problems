Pivot the Occupation column in OCCUPATIONS so that each Name is sorted alphabetically and displayed underneath its corresponding Occupation. The output column headers should be Doctor, Professor, Singer, and Actor, respectively.

Note: Print NULL when there are no more names corresponding to an occupation.

Input Format

The OCCUPATIONS table is described as follows:

https://s3.amazonaws.com/hr-challenge-images/12889/1443816414-2a465532e7-1.png

Occupation will only contain one of the following values: Doctor, Professor, Singer or Actor.

Sample Input

https://s3.amazonaws.com/hr-challenge-images/12890/1443817648-1b2b8add45-2.png

Sample Output

Jenny    Ashley     Meera  Jane
Samantha Christeen  Priya  Julia
NULL     Ketty      NULL   Maria
Explanation

The first column is an alphabetically ordered list of Doctor names.
The second column is an alphabetically ordered list of Professor names.
The third column is an alphabetically ordered list of Singer names.
The fourth column is an alphabetically ordered list of Actor names.
The empty cell data for columns with less than the maximum number of names per occupation (in this case, the Professor and Actor columns) are filled with NULL values.






*********************************************************************************************************************************
SOLUTION
*********************************************************************************************************************************
/*
Enter your query here.
*/
SET @doctor = 0, @professor = 0, @singer = 0, @actor = 0;
SELECT MAX(DNAMES), MAX(PNAMES), MAX(SNAMES), MAX(ANAMES)
FROM
  (
    SELECT
      CASE WHEN OCCUPATION = 'Doctor' THEN NAME END AS DNAMES,
      CASE WHEN OCCUPATION = 'Professor' THEN NAME END AS PNAMES,
      CASE WHEN OCCUPATION = 'Singer' THEN NAME END AS SNAMES,
      CASE WHEN OCCUPATION = 'Actor' THEN NAME END AS ANAMES,
      CASE
        WHEN OCCUPATION = 'Doctor' THEN (@doctor := @doctor + 1)
        WHEN OCCUPATION = 'Professor' THEN (@professor := @professor + 1)
        WHEN OCCUPATION = 'Singer' THEN (@singer := @singer + 1)
        WHEN OCCUPATION = 'Actor' THEN (@actor := @actor + 1)
      END AS nrow
    FROM OCCUPATIONS
   
    ORDER BY NAME
  ) AS pivotTable
GROUP BY nrow;

*********************************************************************************************************************************
OUTPUT
*********************************************************************************************************************************

Aamina Ashley Christeen Eve
Julia Belvet Jane Jennifer
Priya Britney Jenny Ketty
NULL Maria Kristeen Samantha
NULL Meera NULL NULL
NULL Naomi NULL NULL
NULL Priyanka NULL NULL
